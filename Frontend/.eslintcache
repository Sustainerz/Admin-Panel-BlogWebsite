[{"E:\\BlogAuth\\client\\src\\index.js":"1","E:\\BlogAuth\\client\\src\\reportWebVitals.js":"2","E:\\BlogAuth\\client\\src\\App.js":"3","E:\\BlogAuth\\client\\src\\components\\screens\\PrivateScreen.js":"4","E:\\BlogAuth\\client\\src\\components\\screens\\LoginScreen.js":"5","E:\\BlogAuth\\client\\src\\components\\screens\\RegisterScreen.js":"6","E:\\BlogAuth\\client\\src\\components\\routing\\PrivateRoute.js":"7","E:\\FastDev\\Authentication\\client\\src\\index.js":"8","E:\\FastDev\\Authentication\\client\\src\\App.js":"9","E:\\FastDev\\Authentication\\client\\src\\reportWebVitals.js":"10","E:\\FastDev\\Authentication\\client\\src\\components\\routing\\PrivateRoute.js":"11","E:\\FastDev\\Authentication\\client\\src\\components\\screens\\LoginScreen.js":"12","E:\\FastDev\\Authentication\\client\\src\\components\\screens\\PrivateScreen.js":"13","E:\\FastDev\\Authentication\\client\\src\\components\\screens\\RegisterScreen.js":"14","E:\\FastDev\\Authentication\\client\\src\\components\\screens\\settings\\Settings.jsx":"15","E:\\FastDev\\Authentication\\client\\src\\Routes.js":"16","E:\\FastDev\\Authentication\\client\\src\\componentsblog\\SideBar.jsx":"17","E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Reviews.jsx":"18","E:\\FastDev\\Authentication\\client\\src\\componentsblog\\AllBlogs.jsx":"19","E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Update.jsx":"20","E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Settings.jsx":"21","E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Header.jsx":"22","E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Comments.jsx":"23","E:\\FastDev\\Authentication\\client\\src\\componentsblog\\postblog.jsx":"24","E:\\FastDev\\Authentication\\client\\src\\BlogProvider.js":"25","E:\\FastDev\\Authentication\\client\\src\\comp\\Home\\Footer\\index.js":"26"},{"size":517,"mtime":1691623115021,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1691623115021,"results":"29","hashOfConfig":"28"},{"size":744,"mtime":1691679931129,"results":"30","hashOfConfig":"28"},{"size":1342,"mtime":1691680053299,"results":"31","hashOfConfig":"28"},{"size":3378,"mtime":1691679318347,"results":"32","hashOfConfig":"28"},{"size":5086,"mtime":1691679736643,"results":"33","hashOfConfig":"28"},{"size":389,"mtime":1691623115018,"results":"34","hashOfConfig":"28"},{"size":517,"mtime":1691623115021,"results":"35","hashOfConfig":"36"},{"size":744,"mtime":1691679931129,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1691623115021,"results":"38","hashOfConfig":"36"},{"size":389,"mtime":1691623115018,"results":"39","hashOfConfig":"36"},{"size":3378,"mtime":1691679318347,"results":"40","hashOfConfig":"36"},{"size":1450,"mtime":1691824524678,"results":"41","hashOfConfig":"36"},{"size":5086,"mtime":1691679736643,"results":"42","hashOfConfig":"36"},{"size":4377,"mtime":1691794371848,"results":"43","hashOfConfig":"36"},{"size":1311,"mtime":1691824794917,"results":"44","hashOfConfig":"36"},{"size":2537,"mtime":1691823491648,"results":"45","hashOfConfig":"36"},{"size":2544,"mtime":1691823491647,"results":"46","hashOfConfig":"36"},{"size":4322,"mtime":1691825139710,"results":"47","hashOfConfig":"36"},{"size":5065,"mtime":1691825306571,"results":"48","hashOfConfig":"36"},{"size":3802,"mtime":1691823491647,"results":"49","hashOfConfig":"36"},{"size":558,"mtime":1691823491647,"results":"50","hashOfConfig":"36"},{"size":2140,"mtime":1691823491646,"results":"51","hashOfConfig":"36"},{"size":5457,"mtime":1691825404797,"results":"52","hashOfConfig":"36"},{"size":423,"mtime":1691823491600,"results":"53","hashOfConfig":"36"},{"size":1119,"mtime":1691824843775,"results":"54","hashOfConfig":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1ec9l2u",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1a335sm",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\BlogAuth\\client\\src\\index.js",[],["115","116"],"E:\\BlogAuth\\client\\src\\reportWebVitals.js",[],"E:\\BlogAuth\\client\\src\\App.js",[],"E:\\BlogAuth\\client\\src\\components\\screens\\PrivateScreen.js",["117"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst PrivateScreen = ({ history }) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const [isLoggedin, setIsLoggedin] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPrivateDate = async () => {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n      try {\r\n        const { data } = await axios.get(\"/api/private\", config);\r\n        setPrivateData(data.data);\r\n      } catch (error) {\r\n        localStorage.removeItem(\"authToken\");\r\n        setError(\"You are not authorized please login\");\r\n      }\r\n    };\r\n\r\n    fetchPrivateDate();\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    try {\r\n      axios.get(\"/api/auth/logout\").then(() => {\r\n        console.log(\"user Logged out!!!\");\r\n\r\n      })\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    localStorage.removeItem(\"authToken\");\r\n    setIsLoggedin(true);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <div> <h1>{privateData}</h1>\r\n      <button onClickCapture={logout}>logout user</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateScreen;\r\n","E:\\BlogAuth\\client\\src\\components\\screens\\LoginScreen.js",["118","119"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login/Login.css\";\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* // <div className=\"login-screen\">\r\n    //   <form onSubmit={loginHandler} className=\"login-screen__form\">\r\n    //     <h3 className=\"login-screen__title\">Login</h3>\r\n    //     {error && <span className=\"error-message\">{error}</span>}\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"email\">Email:</label>\r\n    //       <input\r\n    //         type=\"email\"\r\n    //         required\r\n    //         id=\"email\"\r\n    //         placeholder=\"Email address\"\r\n    //         onChange={(e) => setEmail(e.target.value)}\r\n    //         value={email}\r\n    //         tabIndex={1}\r\n    //       />\r\n    //     </div>\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"password\">\r\n    //         Password:{\" \"}\r\n          \r\n    //       </label>\r\n    //       <input\r\n    //         type=\"password\"\r\n    //         required\r\n    //         id=\"password\"\r\n    //         autoComplete=\"true\"\r\n    //         placeholder=\"Enter password\"\r\n    //         onChange={(e) => setPassword(e.target.value)}\r\n    //         value={password}\r\n    //         tabIndex={2}\r\n    //       />\r\n    //     </div>\r\n    //     <button type=\"submit\" className=\"btn btn-primary\">\r\n    //       Login\r\n    //     </button>\r\n\r\n    //     <span className=\"login-screen__subtext\">\r\n    //       Don't have an account? <Link to=\"/register\">Register</Link>\r\n    //     </span>\r\n    //   </form>\r\n    // </div>\r\n */}\r\n\r\n\r\n      <section id='Login'>\r\n        <div className=\"loginCard\">\r\n          <div className=\"loginText\">\r\n            <h1>Login</h1>\r\n          </div>\r\n\r\n          <form action=\"\" onSubmit={loginHandler}>\r\n            <input type=\"email\" placeholder='Enter your email' onChange={(e) => setEmail(e.target.value)} value={email} tabIndex={1} />\r\n            <input type=\"password\" placeholder='Confirm a password' onChange={(e) => setPassword(e.target.value)} value={password} tabIndex={2} />\r\n\r\n\r\n            <div className=\"check\">\r\n              {/* <input type=\"checkbox\" /> */}\r\n              {/* <p>Remember me</p> */}\r\n              <a href=\"#\">Forget Password?</a>\r\n            </div>\r\n\r\n            <button type=\"submit\">Login Now</button>\r\n\r\n            <p>Don't have an account? <Link to=\"/register\">Register</Link></p>\r\n\r\n          </form>\r\n\r\n\r\n\r\n        </div>\r\n      </section>\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n",["120","121"],"E:\\BlogAuth\\client\\src\\components\\screens\\RegisterScreen.js",["122"],"import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SignUp/SignUp.css\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmpassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/register\",\r\n        {\r\n          username,\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      {/* // <div className=\"register-screen\">\r\n    //   <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n    //     <h3 className=\"register-screen__title\">Register</h3>\r\n    //     {error && <span className=\"error-message\">{error}</span>}\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"name\">Username:</label>\r\n    //       <input\r\n    //         type=\"text\"\r\n    //         required\r\n    //         id=\"name\"\r\n    //         placeholder=\"Enter username\"\r\n    //         value={username}\r\n    //         onChange={(e) => setUsername(e.target.value)}\r\n    //       />\r\n    //     </div>\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"email\">Email:</label>\r\n    //       <input\r\n    //         type=\"email\"\r\n    //         required\r\n    //         id=\"email\"\r\n    //         placeholder=\"Email address\"\r\n    //         value={email}\r\n    //         onChange={(e) => setEmail(e.target.value)}\r\n    //       />\r\n    //     </div>\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"password\">Password:</label>\r\n    //       <input\r\n    //         type=\"password\"\r\n    //         required\r\n    //         id=\"password\"\r\n    //         autoComplete=\"true\"\r\n    //         placeholder=\"Enter password\"\r\n    //         value={password}\r\n    //         onChange={(e) => setPassword(e.target.value)}\r\n    //       />\r\n    //     </div>\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n    //       <input\r\n    //         type=\"password\"\r\n    //         required\r\n    //         id=\"confirmpassword\"\r\n    //         autoComplete=\"true\"\r\n    //         placeholder=\"Confirm password\"\r\n    //         value={confirmpassword}\r\n    //         onChange={(e) => setConfirmPassword(e.target.value)}\r\n    //       />\r\n    //     </div>\r\n    //     <button type=\"submit\" className=\"btn btn-primary\">\r\n    //       Register\r\n    //     </button>\r\n\r\n    //     <span className=\"register-screen__subtext\">\r\n    //       Already have an account? <Link to=\"/login\">Login</Link>\r\n    //     </span>\r\n    //   </form>\r\n    // </div> */}\r\n\r\n      <section id='SignUp'>\r\n        <div className=\"signCard\">\r\n          <div className=\"loginText\">\r\n            <h1>Registration</h1>\r\n          </div>\r\n\r\n          <form action=\"\" onSubmit={registerHandler}>\r\n            <input type=\"text\" required id=\"name\" placeholder=\"Enter username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n            <input type=\"email\" required id=\"email\" placeholder=\"Email address\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            <input type=\"password\" required id=\"password\" autoComplete=\"true\" placeholder=\"Enter password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            <input type=\"password\" required id=\"confirmpassword\" autoComplete=\"true\" placeholder=\"Confirm password\" onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n            {/* <input type=\"password\" placeholder='Confirm a password' /> */}\r\n\r\n            {/* <div className=\"uplaod\">\r\n                        <label htmlFor=\"\" style={{fontWeight: 'bold'}}>Upload image</label>\r\n                        <input type=\"file\" style={{ border: 'none', padding: '20px' }} />\r\n                    </div> */}\r\n\r\n\r\n\r\n            {/* <div className=\"check\">\r\n                        <input type=\"checkbox\" />\r\n                        <p>I accept all terms and conditions</p>\r\n                       \r\n                    </div> */}\r\n\r\n            <button>Register Now</button>\r\n\r\n            <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n\r\n          </form>\r\n\r\n\r\n\r\n        </div>\r\n      </section>\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","E:\\BlogAuth\\client\\src\\components\\routing\\PrivateRoute.js",[],"E:\\FastDev\\Authentication\\client\\src\\index.js",[],["123","124"],"E:\\FastDev\\Authentication\\client\\src\\App.js",[],"E:\\FastDev\\Authentication\\client\\src\\reportWebVitals.js",[],"E:\\FastDev\\Authentication\\client\\src\\components\\routing\\PrivateRoute.js",[],"E:\\FastDev\\Authentication\\client\\src\\components\\screens\\LoginScreen.js",["125","126"],"E:\\FastDev\\Authentication\\client\\src\\components\\screens\\PrivateScreen.js",["127"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import Settings from '../screens/settings/Settings.jsx';\r\nimport Routes from '../../Routes'\r\n\r\nconst PrivateScreen = ({ history }) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const [isLoggedin, setIsLoggedin] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPrivateDate = async () => {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n      try {\r\n        const { data } = await axios.get(\"/api/private\", config);\r\n        setPrivateData(data.data);\r\n      } catch (error) {\r\n        localStorage.removeItem(\"authToken\");\r\n        setError(\"You are not authorized please login\");\r\n      }\r\n    };\r\n\r\n    fetchPrivateDate();\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    try {\r\n      axios.get(\"/api/auth/logout\").then(() => {\r\n        console.log(\"user Logged out!!!\");\r\n\r\n      })\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    localStorage.removeItem(\"authToken\");\r\n    setIsLoggedin(true);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <div> <h1>{privateData} <Routes/>  </h1>\r\n      <button onClickCapture={logout}>logout user</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateScreen;\r\n","E:\\FastDev\\Authentication\\client\\src\\components\\screens\\RegisterScreen.js",["128"],"E:\\FastDev\\Authentication\\client\\src\\components\\screens\\settings\\Settings.jsx",["129","130","131"],"E:\\FastDev\\Authentication\\client\\src\\Routes.js",[],"E:\\FastDev\\Authentication\\client\\src\\componentsblog\\SideBar.jsx",[],"E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Reviews.jsx",[],"E:\\FastDev\\Authentication\\client\\src\\componentsblog\\AllBlogs.jsx",["132","133","134","135","136"],"E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Update.jsx",["137","138","139","140"],"E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Settings.jsx",["141"],"import React, { useState } from 'react';\r\nimport '../styles/Settings.css';\r\nimport { BiUser } from \"react-icons/bi\";\r\nimport { BsKeyFill } from \"react-icons/bs\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Settings = () => {\r\n    const [oldUsername, setOldUsername] = useState('');\r\n    const [newUsername, setNewUsername] = useState('');\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [showPopup, setShowPopup] = useState(false);\r\n\r\n    const handleUsernameChange = (event) => {\r\n        setNewUsername(event.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (event) => {\r\n        setNewPassword(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (oldUsername.trim() === '' || newUsername.trim() === '' || oldPassword.trim() === '' || newPassword.trim() === '') {\r\n            setShowPopup(true);\r\n            return;\r\n        }\r\n\r\n        console.log('Old Username:', oldUsername);\r\n        console.log('New Username:', newUsername);\r\n        console.log('Old Password:', oldPassword);\r\n        console.log('New Password:', newPassword);\r\n\r\n        updation();\r\n\r\n        setOldUsername('');\r\n        setNewUsername('');\r\n        setOldPassword('');\r\n        setNewPassword('');\r\n    };\r\n    \r\n    const updation = () => {\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Username and Password updated successfully.',\r\n            showConfirmButton: true\r\n          })\r\n    }\r\n\r\n    const showError = () => {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'Please fill all the fields.',\r\n          })\r\n    }\r\n \r\n    return (\r\n        <div className=\"App1\">\r\n            <div className='H1'><h1>Hello!</h1></div>\r\n            <div className='H2'><h2>Change Your Username & Password</h2></div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <div className='user-settings'><h4><BiUser /> Username</h4></div>\r\n                    <label>Old Username </label>\r\n                    <div className='input-settings'>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={oldUsername}\r\n                        onChange={(e) => setOldUsername(e.target.value)}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label>New Username </label>\r\n                    <div className='input-settings'>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newUsername}\r\n                        onChange={handleUsernameChange}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className='pass-settings'><h4><BsKeyFill /> Password</h4></div>\r\n                    <label>Old Password </label>\r\n                    <div className='input-settings'>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={oldPassword}\r\n                        onChange={(e) => setOldPassword(e.target.value)}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label>New Password </label>\r\n                    <div className='input-settings'>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={newPassword}\r\n                        onChange={handlePasswordChange}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <button onClick={showError}>Update</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Header.jsx",[],"E:\\FastDev\\Authentication\\client\\src\\componentsblog\\Comments.jsx",[],"E:\\FastDev\\Authentication\\client\\src\\componentsblog\\postblog.jsx",["142","143","144","145"],"E:\\FastDev\\Authentication\\client\\src\\BlogProvider.js",[],"E:\\FastDev\\Authentication\\client\\src\\comp\\Home\\Footer\\index.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":7,"column":10,"nodeType":"152","messageId":"153","endLine":7,"endColumn":20},{"ruleId":"150","severity":1,"message":"154","line":9,"column":10,"nodeType":"152","messageId":"153","endLine":9,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":104,"column":15,"nodeType":"157","endLine":104,"endColumn":27},{"ruleId":"146","replacedBy":"158"},{"ruleId":"148","replacedBy":"159"},{"ruleId":"150","severity":1,"message":"154","line":11,"column":10,"nodeType":"152","messageId":"153","endLine":11,"endColumn":15},{"ruleId":"146","replacedBy":"160"},{"ruleId":"148","replacedBy":"161"},{"ruleId":"150","severity":1,"message":"154","line":9,"column":10,"nodeType":"152","messageId":"153","endLine":9,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":104,"column":15,"nodeType":"157","endLine":104,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":9,"column":10,"nodeType":"152","messageId":"153","endLine":9,"endColumn":20},{"ruleId":"150","severity":1,"message":"154","line":11,"column":10,"nodeType":"152","messageId":"153","endLine":11,"endColumn":15},{"ruleId":"150","severity":1,"message":"162","line":14,"column":12,"nodeType":"152","messageId":"153","endLine":14,"endColumn":21},{"ruleId":"150","severity":1,"message":"163","line":14,"column":23,"nodeType":"152","messageId":"153","endLine":14,"endColumn":35},{"ruleId":"150","severity":1,"message":"164","line":79,"column":11,"nodeType":"152","messageId":"153","endLine":79,"endColumn":20},{"ruleId":"150","severity":1,"message":"165","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":14},{"ruleId":"150","severity":1,"message":"166","line":35,"column":9,"nodeType":"152","messageId":"153","endLine":35,"endColumn":14},{"ruleId":"150","severity":1,"message":"167","line":119,"column":9,"nodeType":"152","messageId":"153","endLine":119,"endColumn":21},{"ruleId":"150","severity":1,"message":"168","line":133,"column":11,"nodeType":"152","messageId":"153","endLine":133,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":164,"column":16,"nodeType":"157","endLine":166,"endColumn":41},{"ruleId":"150","severity":1,"message":"171","line":13,"column":11,"nodeType":"152","messageId":"153","endLine":13,"endColumn":15},{"ruleId":"150","severity":1,"message":"172","line":17,"column":16,"nodeType":"152","messageId":"153","endLine":17,"endColumn":23},{"ruleId":"150","severity":1,"message":"173","line":18,"column":9,"nodeType":"152","messageId":"153","endLine":18,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":103,"column":13,"nodeType":"157","endLine":107,"endColumn":15},{"ruleId":"150","severity":1,"message":"162","line":12,"column":12,"nodeType":"152","messageId":"153","endLine":12,"endColumn":21},{"ruleId":"150","severity":1,"message":"172","line":15,"column":16,"nodeType":"152","messageId":"153","endLine":15,"endColumn":23},{"ruleId":"150","severity":1,"message":"173","line":16,"column":9,"nodeType":"152","messageId":"153","endLine":16,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":114,"column":13,"nodeType":"157","endLine":118,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":134,"column":13,"nodeType":"157","endLine":138,"endColumn":15},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'isLoggedin' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["174"],["175"],["174"],["175"],"'showPopup' is assigned a value but never used.","'setShowPopup' is assigned a value but never used.","'showError' is assigned a value but never used.","'Link' is defined but never used.","'blogs' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'setSelectedBlogId' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'slug' is assigned a value but never used.","'setDesc' is assigned a value but never used.","'handleEditorChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]